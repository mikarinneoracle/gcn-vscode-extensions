{
	"name": "visualvm",
	"displayName": "VisualVM Integration",
	"description": "VisualVM integration for Visual Studio Code",
	"version": "0.1.0",
	"preview": true,
	"license": "UPL-1.0",
	"publisher": "oracle-labs-graalvm",
	"author": {
		"name": "Oracle Labs"
	},
	"icon": "images/extension_icon.png",
	"homepage": "https://github.com/oracle/gcn-vscode-extensions/blob/main/visualvm/README.md",
	"repository": {
		"type": "git",
		"url": "https://github.com/oracle/gcn-vscode-extensions"
	},
	"bugs": {
		"url": "https://github.com/oracle/gcn-vscode-extensions/issues"
	},
	"engines": {
		"vscode": "^1.76.0"
	},
	"categories": [
		"Programming Languages",
		"Debuggers",
		"Testing",
		"Other"
	],
	"keywords": [
		"visualvm",
		"java",
		"performance",
		"profiling"
	],
	"activationEvents": [
		"*"
	],
	"main": "./dist/extension",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "VisualVM Integration",
			"properties": {
				"visualvm.installationPath": {
					"type": "string",
					"default": "",
					"description": "Path to the local VisualVM installation folder",
					"scope": "machine-overridable"
				}
			}
		},
		"commands": [
			{
				"command": "visualvm.selectInstallation",
				"title": "Select Local VisualVM Installation",
				"category": "VisualVM"
			},
			{
				"command": "visualvm.moveView",
				"title": "Move VisualVM View",
				"category": "VisualVM",
				"icon": "$(pin)"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "visualvm",
					"title": "VisualVM",
					"icon": "resources/visualvm_icon.png"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "visualvm-visualvm",
				"contents": "Initializing VisualVM integration...",
				"when": "!visualvm.initialized"
			},
			{
				"view": "visualvm-visualvm",
				"contents": "Start by downloading the latest [VisualVM](https://visualvm.github.io), and then:\n[Select Local VisualVM Installation](command:visualvm.selectInstallation)\nTip: You can easily [move this view](command:visualvm.moveView) to a different location.",
				"when": "visualvm.noInstallation"
			},
			{
				"view": "visualvm-explorer",
				"contents": "Initializing VisualVM integration...",
				"when": "!visualvm.initialized"
			},
			{
				"view": "visualvm-explorer",
				"contents": "Start by downloading the latest [VisualVM](https://visualvm.github.io), and then:\n[Select Local VisualVM Installation](command:visualvm.selectInstallation)\nTip: You can easily [move this view](command:visualvm.moveView) to a different location.",
				"when": "visualvm.noInstallation"
			},
			{
				"view": "visualvm-debug",
				"contents": "Initializing VisualVM integration...",
				"when": "!visualvm.initialized"
			},
			{
				"view": "visualvm-debug",
				"contents": "Start by downloading the latest [VisualVM](https://visualvm.github.io), and then:\n[Select Local VisualVM Installation](command:visualvm.selectInstallation)\nTip: You can easily [move this view](command:visualvm.moveView) to a different location.",
				"when": "visualvm.noInstallation"
			},
			{
				"view": "visualvm-extension-micronaut-tools",
				"contents": "Initializing VisualVM integration...",
				"when": "!visualvm.initialized"
			},
			{
				"view": "visualvm-extension-micronaut-tools",
				"contents": "Start by downloading the latest [VisualVM](https://visualvm.github.io), and then:\n[Select Local VisualVM Installation](command:visualvm.selectInstallation)\nTip: You can easily [move this view](command:visualvm.moveView) to a different location.",
				"when": "visualvm.noInstallation"
			}
		],
		"views": {
			"visualvm": [
				{
					"id": "visualvm-visualvm",
					"name": "VisualVM",
					"icon": "resources/visualvm_icon.png",
					"when": "visualvm.view == visualvm-visualvm"
				}
			],
			"explorer": [
				{
					"id": "visualvm-explorer",
					"name": "VisualVM",
					"icon": "resources/visualvm_icon.png",
					"when": "visualvm.view == visualvm-explorer"
				}
			],
			"debug": [
				{
					"id": "visualvm-debug",
					"name": "VisualVM",
					"icon": "resources/visualvm_icon.png",
					"when": "visualvm.view == visualvm-debug"
				}
			]
		},
		"menus": {
			"commandPalette": [
			],
			"editor/context": [
			],
			"view/title": [
				{
					"command": "visualvm.moveView",
					"group": "navigation@1",
					"when": "view in visualvm.views"
				}
			],
			"view/item/context": [
			]
		},
		"netbeans.options": {
			"javaSupport.conflict": false
		}
	},
	"vsce": {
		"baseImagesUrl": "https://github.com/oracle/gcn-vscode-extensions/raw/main/visualvm"
	},
	"config": {
		"winBuildPath": "..\\node_modules\\.bin\\vsce",
		"unixBuildPath": "../node_modules/.bin/vsce",
		"buildCmd": "package --allow-star-activation --no-update-package-json"
	},
	"scripts": {
		"vscode:prepublish": "cross-env NODE_OPTIONS='--max-old-space-size=8192' webpack --mode production",
		"compile": "webpack --mode development",
		"info": "webpack --display-modules",
		"watch": "webpack --mode development --watch",
		"watch-tests": "tsc --outDir out --watch",
		"test-clean": "rm -r out",
		"test-compile": "tsc -p . --declaration --outDir out",
		"test": "cross-env GLOBAL_AGENT_NO_PROXY=$no_proxy GLOBAL_AGENT_HTTP_PROXY=$http_proxy node --require global-agent/bootstrap ./node_modules/gcn-extension-tests/bin/main.js --runTest",
		"test-ui": "cross-env GLOBAL_AGENT_NO_PROXY=$no_proxy GLOBAL_AGENT_HTTP_PROXY=$http_proxy node --require global-agent/bootstrap ./node_modules/gcn-extension-tests/bin/main.js --runTest-ui",
		"prebuild": "npm install",
		"build": "cross-os build",
		"lint": "eslint src --ext ts"
	},
	"cross-os": {
		"build": {
			"linux": "$npm_package_config_unixBuildPath $npm_package_config_buildCmd `[ -z ${BUILD_NUMBER} ] && echo \"${npm_package_version}\" || echo \"${npm_package_version}-${BUILD_NUMBER}\"`",
			"darwin": "$npm_package_config_unixBuildPath $npm_package_config_buildCmd `[ -z ${BUILD_NUMBER} ] && echo \"${npm_package_version}\" || echo \"${npm_package_version}-${BUILD_NUMBER}\"`",
			"win32": "%npm_package_config_winBuildPath% %npm_package_config_buildCmd%"
		}
	},
	"dependencies": {
		"isomorphic-fetch": "^3.0.0",
		"jdk-utils": "^0.4.4",
		"mustache": "^4.2.0",
		"oci-sdk": "^2.68.1",
		"semver": "^7.5.3",
		"vscode-kubernetes-tools-api": "^1.3.0",
		"which": "^3.0.0",
		"xml2js": "^0.5.0"
	},
	"devDependencies": {
		"@types/glob": "^8.0.1",
		"@types/isomorphic-fetch": "^0.0.36",
		"@types/mocha": "^10.0.1",
		"@types/mustache": "^4.0.1",
		"@types/node": "^14.16.0",
		"@types/semver": "7.5.0",
		"@types/vscode": "^1.76.0",
		"@types/which": "^2.0.1",
		"@types/xml2js": "^0.4.11",
		"@typescript-eslint/eslint-plugin": "^5.54.1",
		"@typescript-eslint/parser": "^5.54.1",
		"@vscode/codicons": "0.0.20",
		"@vscode/test-electron": "^2.2.3",
		"ajv": "^8.12.0",
		"cross-env": "^7.0.3",
		"cross-os": "^1.5.0",
		"encoding": "^0.1.13",
		"eslint": "^8.35.0",
		"eslint-webpack-plugin": "^4.0.0",
		"gcn-extension-tests": "^1.2.1",
		"glob": "^8.1.0",
		"global-agent": "^3.0.0",
		"mocha": "^10.1.0",
		"mochawesome": "^7.1.3",
		"node-abort-controller": "^3.1.1",
		"ts-loader": "^9.4.2",
		"typescript": "^4.9.5",
		"vscode-extension-tester": "^5.2.1",
		"webpack": "^5.74.0",
		"webpack-cli": "^4.10.0"
	},
	"extensionDependencies": [
		"asf.apache-netbeans-java"
	]
}
